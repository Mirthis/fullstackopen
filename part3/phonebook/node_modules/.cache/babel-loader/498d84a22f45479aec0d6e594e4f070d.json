{"ast":null,"code":"var _jsxFileName = \"/home/mirthis/fullstackopen/part2/phonebook/src/App.js\",\n    _s = $RefreshSig$();\n\nimport { useEffect, useState } from \"react\";\nimport Filter from \"./components/Filter\";\nimport PersonForm from \"./components/PersonForm\";\nimport Persons from \"./components/Persons\";\nimport personsService from \"./services/persons\";\nimport Notification from \"./components/Notification\";\nimport \"./index.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst App = () => {\n  _s();\n\n  const [persons, setPersons] = useState([]);\n  const [newName, setNewName] = useState(\"\");\n  const [newNumber, setNewNumber] = useState(\"\");\n  const [filter, setFilter] = useState(\"\");\n  const [notification, setNotification] = useState(null);\n\n  const setNotificationObj = function (message) {\n    let type = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : \"success\";\n    setNotification({\n      message,\n      type\n    });\n  };\n\n  const loadData = () => {\n    personsService.getAll().then(data => setPersons(data)).catch(err => console.log(err));\n  };\n\n  useEffect(loadData, []);\n\n  const updatePerson = async (id, personData) => {\n    try {\n      const data = await personsService.update(id, personData);\n      setPersons(persons.map(p => p.id === data.id ? data : p));\n    } catch (err) {\n      console.log(err);\n    }\n  };\n\n  const createPerson = async personData => {\n    try {\n      const data = await personsService.create(personData);\n      setPersons(persons.concat(data));\n      setNotificationObj(`New contact \"${data.name}\" added to the phonebook!`);\n    } catch (err) {\n      console.log(err);\n    }\n  };\n\n  const deletePerson = async function (id) {\n    try {\n      await personsService.delete_person(id);\n      setPersons(persons.filter(p => p.id !== id));\n    } catch (err) {\n      console.log(err);\n    }\n  };\n\n  const submitForm = e => {\n    e.preventDefault();\n    const newPerson = {\n      name: newName,\n      number: newNumber\n    };\n    const knownPerson = persons.find(i => i.name === newName);\n\n    if (knownPerson) {\n      const msg = `${newName} is already added to phonebook, replace the old number with a new one`;\n\n      if (!window.confirm(msg)) {\n        return;\n      }\n\n      updatePerson(knownPerson.id, newPerson);\n    } else {\n      createPerson(newPerson);\n    }\n\n    setNewName(\"\");\n    setNewNumber(\"\");\n  };\n\n  const onNameChange = e => {\n    setNewName(e.target.value);\n  };\n\n  const onNumberChange = e => {\n    setNewNumber(e.target.value);\n  };\n\n  const onFilterChange = e => {\n    setFilter(e.target.value);\n  };\n\n  const onDeleteClick = e => {\n    const toDeleteId = +e.target.dataset.id;\n    const toDeleteObj = persons.find(p => p.id === toDeleteId);\n\n    if (window.confirm(`Delete ${toDeleteObj.name}`)) {\n      deletePerson(toDeleteId);\n    }\n  };\n\n  const showPersons = filter === \"\" ? persons : persons.filter(p => p.name.toLowerCase().includes(filter.toLowerCase()));\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Phonebook\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 106,\n      columnNumber: 7\n    }, this), notification && /*#__PURE__*/_jsxDEV(Notification, {\n      message: notification.message,\n      type: notification.type\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 108,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(Filter, {\n      onSubmit: submitForm,\n      filter: filter,\n      onFilterChange: onFilterChange\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 110,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n      children: \"add a new\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 115,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(PersonForm, {\n      onSubmit: submitForm,\n      onNameChange: onNameChange,\n      onNumberChange: onNumberChange,\n      name: newName,\n      number: newNumber\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 116,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n      children: \"Numbers\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 123,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Persons, {\n      persons: showPersons,\n      onDeleteClick: onDeleteClick\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 124,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 105,\n    columnNumber: 5\n  }, this);\n};\n\n_s(App, \"5d2BlWklKKjYPoSW3khwDKyVXc0=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["/home/mirthis/fullstackopen/part2/phonebook/src/App.js"],"names":["useEffect","useState","Filter","PersonForm","Persons","personsService","Notification","App","persons","setPersons","newName","setNewName","newNumber","setNewNumber","filter","setFilter","notification","setNotification","setNotificationObj","message","type","loadData","getAll","then","data","catch","err","console","log","updatePerson","id","personData","update","map","p","createPerson","create","concat","name","deletePerson","delete_person","submitForm","e","preventDefault","newPerson","number","knownPerson","find","i","msg","window","confirm","onNameChange","target","value","onNumberChange","onFilterChange","onDeleteClick","toDeleteId","dataset","toDeleteObj","showPersons","toLowerCase","includes"],"mappings":"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","sourcesContent":["import { useEffect, useState } from \"react\";\nimport Filter from \"./components/Filter\";\nimport PersonForm from \"./components/PersonForm\";\nimport Persons from \"./components/Persons\";\nimport personsService from \"./services/persons\";\nimport Notification from \"./components/Notification\";\nimport \"./index.css\";\n\nconst App = () => {\n  const [persons, setPersons] = useState([]);\n  const [newName, setNewName] = useState(\"\");\n  const [newNumber, setNewNumber] = useState(\"\");\n  const [filter, setFilter] = useState(\"\");\n  const [notification, setNotification] = useState(null);\n\n  const setNotificationObj = function (message, type = \"success\") {\n    setNotification({ message, type });\n  };\n\n  const loadData = () => {\n    personsService\n      .getAll()\n      .then((data) => setPersons(data))\n      .catch((err) => console.log(err));\n  };\n\n  useEffect(loadData, []);\n\n  const updatePerson = async (id, personData) => {\n    try {\n      const data = await personsService.update(id, personData);\n      setPersons(persons.map((p) => (p.id === data.id ? data : p)));\n    } catch (err) {\n      console.log(err);\n    }\n  };\n\n  const createPerson = async (personData) => {\n    try {\n      const data = await personsService.create(personData);\n      setPersons(persons.concat(data));\n      setNotificationObj(`New contact \"${data.name}\" added to the phonebook!`);\n    } catch (err) {\n      console.log(err);\n    }\n  };\n\n  const deletePerson = async function (id) {\n    try {\n      await personsService.delete_person(id);\n      setPersons(persons.filter((p) => p.id !== id));\n    } catch (err) {\n      console.log(err);\n    }\n  };\n\n  const submitForm = (e) => {\n    e.preventDefault();\n    const newPerson = {\n      name: newName,\n      number: newNumber,\n    };\n    const knownPerson = persons.find((i) => i.name === newName);\n    if (knownPerson) {\n      const msg = `${newName} is already added to phonebook, replace the old number with a new one`;\n      if (!window.confirm(msg)) {\n        return;\n      }\n      updatePerson(knownPerson.id, newPerson);\n    } else {\n      createPerson(newPerson);\n    }\n    setNewName(\"\");\n    setNewNumber(\"\");\n  };\n\n  const onNameChange = (e) => {\n    setNewName(e.target.value);\n  };\n\n  const onNumberChange = (e) => {\n    setNewNumber(e.target.value);\n  };\n\n  const onFilterChange = (e) => {\n    setFilter(e.target.value);\n  };\n\n  const onDeleteClick = (e) => {\n    const toDeleteId = +e.target.dataset.id;\n    const toDeleteObj = persons.find((p) => p.id === toDeleteId);\n    if (window.confirm(`Delete ${toDeleteObj.name}`)) {\n      deletePerson(toDeleteId);\n    }\n  };\n\n  const showPersons =\n    filter === \"\"\n      ? persons\n      : persons.filter((p) =>\n          p.name.toLowerCase().includes(filter.toLowerCase())\n        );\n\n  return (\n    <div>\n      <h2>Phonebook</h2>\n      {notification && (\n        <Notification message={notification.message} type={notification.type} />\n      )}\n      <Filter\n        onSubmit={submitForm}\n        filter={filter}\n        onFilterChange={onFilterChange}\n      />\n      <h3>add a new</h3>\n      <PersonForm\n        onSubmit={submitForm}\n        onNameChange={onNameChange}\n        onNumberChange={onNumberChange}\n        name={newName}\n        number={newNumber}\n      />\n      <h3>Numbers</h3>\n      <Persons persons={showPersons} onDeleteClick={onDeleteClick} />\n    </div>\n  );\n};\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}